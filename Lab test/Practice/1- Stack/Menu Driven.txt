#include<iostream>

using namespace std;


int S[100], tos, MaxSize;


void initStack(int size)
{
	MaxSize = size;
	tos = -1;
}


int isFull()
{
	if (tos == MaxSize - 1)
		return 1;
	else
		return 0;
}


int isEmpty()
{
	if (tos == -1)
		return 1;
	else
		return 0;
}


//Push
void push(int e)
{
	if (isFull() == 1)
	{
		cout << "Stack is full" << endl;
	}

	else 
	{
		S[++tos] = e;
	}
}


//Pop
int pop()
{
	if (isEmpty() == 1)
		cout << "Stack is empty" << endl;

	else
	{
		int e = S[tos--];
		return e;
	}
		
}

//Top most element
int atTop()
{
	return S[tos];
}


//Print stack
void printStack()
{
	for (int i = tos; i >= 0; i--)
	{
		cout <<" "<< S[i] << " ";
	}

	cout << endl;
}


int main() {

	int c;
	int size;
	int e;

	cout << "Enter size" << endl;
	cin >> size;
	initStack(size);
	

	do
	{
		cout << "ENter choice" << endl;
		
		cout << "1. Push" << endl;
		cout << "2. Pop" << endl;
		cout << "3. Top of Stack" << endl;
		cout << "4. Print Stack" << endl;
		cout << "5. Exit" << endl;

		

		cin >> c;

		
		switch (c)
		{
	

		case 1:
		{
			cout << "ENter element" << endl;
			cin >> e;
			push(e);
			break;
		}

		case 2:
		{
			
			e = pop();
			cout << "Popped " << e << endl;
			break;
		}

		case 3:
		{
			
			cout << "Top of stack is " << atTop() << endl;
			break;
		}

		case 4:
		{
			
			printStack();
			break;
		}

		case 5:
		{
			exit(1);
		}

		default: cout << "Incorrect choice" << endl;
		}


		

	} while (c != 5);

	return 0;
}